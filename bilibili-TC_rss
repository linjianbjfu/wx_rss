<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>bilibili-TC</id>
    <title>哔哩哔哩技术</title>
    <updated>2024-02-23T04:09:54.088Z</updated>
    <generator>awesome</generator>
    <author>
        <name>哔哩哔哩技术</name>
    </author>
    <subtitle>提供B站相关技术的介绍和讲解</subtitle>
    <logo>http://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QyhiatboUJGZpnzrVDJZCDFYOWhcbdbvj2TlhSXVeErhqCZ8CzgHob1wNDy9IUl4HJheIaIrzgN3A/0?wx_fmt=png</logo>
    <icon>http://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QyhiatboUJGZpnzrVDJZCDFYOWhcbdbvj2TlhSXVeErhqCZ8CzgHob1wNDy9IUl4HJheIaIrzgN3A/0?wx_fmt=png</icon>
    <entry>
        <title type="html"><![CDATA[WebGL高质量实时角色渲染]]></title>
        <id>2247498417_1</id>
        <link href="http://mp.weixin.qq.com/s?__biz=Mzg3Njc0NTgwMg==&amp;mid=2247498417&amp;idx=1&amp;sn=f2c196d6224d8273fdcd42498429ce43&amp;chksm=cf2f3f94f858b682c031213895ceac8f514018fa2892d0411b1c68b717396807a956f0d96050#rd"/>
        <updated>2024-02-22T12:48:28.000Z</updated>
        <summary type="html"><![CDATA[<div><div style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><div style="display: inline-block;vertical-align: top;padding-left: 10px;"><div style="border-bottom: 1px dashed rgb(0, 0, 0);padding-left: 5px;font-size: 20px;color: rgb(12, 182, 242);"><p><strong>本期作者</strong></p></div><div style="margin-top: -7px;margin-left: -10px;width: 10px;"><p style="transform: rotate(0deg);margin-left: auto;width: 7px;height: 7px;background-color: rgb(255, 102, 149);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></p><p style="margin-top: -4px;margin-left: -3px;width: 10px;height: 10px;background-color: rgb(12, 182, 242);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></p></div></div></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin: 10px 0%;justify-content: center;display: flex;flex-flow: row nowrap;" powered-by="xiumi.us"><div style="display: inline-block;vertical-align: middle;width: 32%;margin-top: 10px;align-self: center;flex: 0 0 auto;height: auto;"><div style="font-size: 32px;margin: 10px 0%;" powered-by="xiumi.us"><div style="display: inline-block;vertical-align: bottom;margin: auto;width: 3em;height: 3em;border-radius: 100%;background-position: center center;background-repeat: no-repeat;background-size: cover;overflow: hidden;background-image: url(&quot;https://mmbiz.qpic.cn/mmbiz_jpg/1BMf5Ir754QsoomDywL7COia5PI9QdJqnF0BrBAD4SX2qsiaQeC5G1ehjEm2bUgmPbcgAOGmxW1Nv6gopZqS1cyg/640?wx_fmt=jpeg&amp;from=appmsg&quot;);"><p style="width: 100%;height: 100%;overflow: hidden;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014722" data-ratio="1.1222222222222222" data-s="300,640" data-type="jpeg" data-w="1080" style="width: 100%;height: 100%;opacity: 0;" src="https://mmbiz.qpic.cn/mmbiz_jpg/1BMf5Ir754QsoomDywL7COia5PI9QdJqnF0BrBAD4SX2qsiaQeC5G1ehjEm2bUgmPbcgAOGmxW1Nv6gopZqS1cyg/640?wx_fmt=jpeg&amp;from=appmsg"></p></div></div></div><div style="display: inline-block;vertical-align: middle;width: 48%;align-self: center;flex: 0 0 auto;"><div style="text-align: justify;" powered-by="xiumi.us"><p style="white-space: normal;"><br></p></div><div style="margin-top: 0.5em;margin-bottom: 0.5em;" powered-by="xiumi.us"><div style="display: inline-block;"><div style="border-bottom: 1px solid rgb(0, 0, 0);display: inline-block;padding-right: 0.8em;padding-left: 0.8em;color: rgb(0, 0, 0);"><p>万成</p></div><div style="margin-top: 5px;text-align: justify;font-size: 14px;"><p style="text-align: center;white-space: normal;">哔哩哔哩资深技术美术</p></div></div></div></div></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014723" data-ratio="0.4222222222222222" data-s="300,640" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnxWgndSYqg6sjhO4oliatic9FM6oXvHMuYMKyAicD8MFFRFGNwdSLXib2Pg/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><div style="display: inline-block;vertical-align: top;padding-left: 10px;"><div style="border-bottom: 1px dashed rgb(0, 0, 0);padding-left: 5px;font-size: 20px;color: rgb(12, 182, 242);"><p><strong>背景</strong></p></div><div style="margin-top: -7px;margin-left: -10px;width: 10px;"><p style="transform: rotate(0deg);margin-left: auto;width: 7px;height: 7px;background-color: rgb(255, 102, 149);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></p><p style="margin-top: -4px;margin-left: -3px;width: 10px;height: 10px;background-color: rgb(12, 182, 242);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></p></div></div></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;">随着图形图像渲染技术的快速发展，如何在移动端呈现出高质量的数字人渲染效果，是实时渲染领域最主流的技术研究方向之一。对于B站移动端App而言，如果使用主流的实时渲染引擎如Unreal/Unity等，都会带来100-130M左右的安装包体积增量，进而增加应用安装和版本更新的成本。</p><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;">针对该问题，我们选择了更为灵活轻量的WebGL渲染方案，将包体增量大幅降低至1M以内，同时借助Web天然的开箱即用特性，加速了业务需求在移动端落地的整体节奏。经过对Web渲染能力的行业调研，我们最终从众多的Web3D渲染引擎中选择了Three.JS。Three.JS作为一款轻量级的JavaScript 3D渲染库，具备强大的图形能力和广泛的社区支持，在数字人渲染方向能够给予我们一定的基础能力支持。</p><p style="word-break: break-all;white-space: normal;">但如果只是使用Three.JS自带的PBR（Physically-Based Rendering）渲染，在偏CG和写实方向的数字人渲染效果上，很难达到令人满意的品质感。为了能够进一步还原商业实时渲染引擎Unreal的人物效果，同时兼顾好WebGL在移动设备上的性能和发热问题，我们在人物皮肤，瞳孔，抗锯齿，半透明等方向上做了深入的二次研发，提出了一套完整的高质量角色移动端WebGL渲染解决方案。本文将分享我们在探索和实现该方案的过程中遇到的挑战及最终的解决思路。</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><div style="display: inline-block;vertical-align: top;padding-left: 10px;"><div style="border-bottom: 1px dashed rgb(0, 0, 0);padding-left: 5px;font-size: 20px;color: rgb(12, 182, 242);"><p><strong>PBR优化</strong></p></div><div style="margin-top: -7px;margin-left: -10px;width: 10px;"><p style="transform: rotate(0deg);margin-left: auto;width: 7px;height: 7px;background-color: rgb(255, 102, 149);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></p><p style="margin-top: -4px;margin-left: -3px;width: 10px;height: 10px;background-color: rgb(12, 182, 242);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></p></div></div></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;">PBR（Physically-Based Rendering）是一种计算机图形学中的渲染技术，旨在模拟（近似）光线在现实世界中的物理行为，以实现更真实、逼真的渲染效果。因此我们的美术资产的制作采用了全套PBR流程，Three.JS内置的MeshPhysicalMaterial也对PBR做了材质支持，但我们发现Three.JS的PBR实现在移动端上依然存在性能瓶颈。所以针对以上问题我们给出了如下解决方案：</p><p style="word-break: break-all;white-space: normal;">首先我们来看Cook-Torrance的BRDF模型：</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014721" data-ratio="0.12449799196787148" data-s="300,640" data-type="png" data-w="498" style="vertical-align: middle;width: 298px;height: 37px;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnufIAzW8Lq7WJLrk9shteP8fydCR6qkxrTX8wEt4f5eMWYpibZ6wa79w/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;">其中Cook-Torrance镜面反射如下：</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014720" data-ratio="0.2288135593220339" data-s="300,640" data-type="png" data-w="472" style="vertical-align: middle;width: 282px;height: 65px;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqn7Wxmgd0ibnocls9ukYwIOzhCsraxbicj7AxQricotWu8VkXpKPaibuspmA/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;">D表示法线分布函数（Normal Distribution Function）</p><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;">G表示几何函数（Geometry function）</p><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;">F表示菲尼尔函数（Fresnel function）</p><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;">n表示法线方向，l表示灯光方向，v表示视线方向，h表示l与v的中间方向（halfway）</p><p style="word-break: break-all;white-space: normal;">首先，我们使用 UE4 粗糙度的定义，将它用于以下所有方程中的α：</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014719" data-ratio="0.17647058823529413" data-s="300,640" data-type="png" data-w="255" style="vertical-align: middle;width: 160px;height: 28px;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnicKjN0WicU8dVpCwe31k20gbZlzPOKtS7lzmOMUGaGiaicU9lf0BuhM6Nw/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;">分布函数：</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014728" data-ratio="0.15160796324655437" data-s="300,640" data-type="png" data-w="653" style="vertical-align: middle;width: 320px;height: 49px;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnFFLwhg903DUicGdxj0UlE8t09ib0Lww4AmspTVtG2vcgrOganWLB9YDA/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;">几何函数：</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014727" data-ratio="0.14246947082767977" data-s="300,640" data-type="png" data-w="737" style="vertical-align: middle;width: 366px;height: 52px;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnvnTvQGd9AOQueeWTxzly2F9RrLrBSJ8GLdNlMSKkAAN9b8TQuJTBMw/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;">我们使用史密斯方法（Smith's method）将G_GGX作为子函数G_sub：</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014725" data-ratio="0.09330985915492958" data-s="300,640" data-type="png" data-w="568" style="vertical-align: middle;width: 296px;height: 28px;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnfjM75njvbsNCCEzdDMDP12ACy6b7DzcCFCWtBQAQYyabic2rqFBqemg/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;">菲尼尔函数：</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014724" data-ratio="0.08307692307692308" data-s="300,640" data-type="png" data-w="650" style="vertical-align: middle;width: 362px;height: 30px;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnM5REeVEoGtUl8sAXlG8ArQOLjBrd8iaSEIh3Xwdibap21EMzUicPVjySw/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;">F0表示表明的基础反射率，一般我们采用vec3(0.04)</p><p style="word-break: break-all;white-space: normal;">我们还可以将镜面反射分母与几何函数进行合并得到可见性项（Visibility）：</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014726" data-ratio="0.30844155844155846" data-s="300,640" data-type="png" data-w="308" style="vertical-align: middle;width: 136px;height: 42px;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnNxHZXaC0ibWviawej7nhlY4WJDa2BXOnh8K1gEKjYmzZFkggH3HDzthg/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;">最后我们得到了：</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014731" data-ratio="0.09653465346534654" data-s="300,640" data-type="png" data-w="404" style="vertical-align: middle;width: 253px;height: 24px;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnxT4fQYNSc651SW8TvxZYuBdJrfQhmGibsow42UJ3twl2j4A3bGUrGow/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;">我们发现几何函数里有除法和求平方根，写成代码为：</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014730" data-ratio="0.19534883720930232" data-s="300,640" data-type="png" data-w="430" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnOdRznCz5Q6zwJSGJognkR7WFbmK0AwW4g70ZCia8WRkiaCtgDA4GnG1g/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;">有没有办法简化呢？根据SIGGRAPH 2015 Optimizing PBR for Mobile有关简化VF项：</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014729" data-ratio="0.1723027375201288" data-s="300,640" data-type="png" data-w="621" style="vertical-align: middle;width: 334px;height: 58px;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnj2PXVo5beZvicG6BrctVnAj1RdiaLBvY116Rp33Fl9UlSBSSZMugXZXg/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;">最终我们的表达式：</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014732" data-ratio="0.10355648535564854" data-s="300,640" data-type="png" data-w="956" style="vertical-align: middle;width: 496px;height: 51px;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqn6pPKAqh5edPWe3ju0QlPWiaO6iac7QiaibB7lxW6uiaaywPwHgGSOsE3Lww/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;">加和乘，仅有一次除法。</p><p style="word-break: break-all;white-space: normal;"><strong>与Three.JS内置PBR性能对比</strong></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014733" data-ratio="0.537962962962963" data-s="300,640" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnhlsYUxBLliaYPiaSo5xqCdqkibK7OH3oniaVfqtYKib9TKoic9aYcmaZ77gg/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;">我们设计了一个测试场景，仅渲染一个角色，同时去除了其他干扰，为了能体现本次性能差距，选用了3款机器进行测试帧生成时间（SOC由于发热等因素可能是一个区间）：</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;" powered-by="xiumi.us"><p><br></p><table resolved=""><colgroup><col><col><col><col></colgroup><tbody><tr><td colspan="1" rowspan="1" style="border-color: rgb(193, 199, 208);padding-top: 7px;padding-bottom: 7px;vertical-align: top;min-width: 8px;background-color: rgb(255, 254, 213);"><p><strong><span style="font-size: 14px;">机型 (处理器)</span></strong></p></td><td colspan="1" rowspan="1" style="border-color: rgb(193, 199, 208);padding-top: 7px;padding-bottom: 7px;vertical-align: top;min-width: 8px;background-color: rgb(255, 254, 213);"><p><strong><span style="font-size: 14px;">ThreeJS PBR</span></strong></p></td><td colspan="1" rowspan="1" style="border-color: rgb(193, 199, 208);padding-top: 7px;padding-bottom: 7px;vertical-align: top;min-width: 8px;background-color: rgb(255, 254, 213);"><p><strong><span style="font-size: 14px;">优化 PBR</span></strong></p></td><td colspan="1" style="border-color: rgb(193, 199, 208);padding-top: 7px;padding-bottom: 7px;vertical-align: top;min-width: 8px;background-color: rgb(255, 254, 213);"><strong><span style="font-size: 14px;">提升比例</span></strong></td></tr><tr><td colspan="1" rowspan="1" style="border-color: rgb(193, 199, 208);padding-top: 7px;padding-bottom: 7px;vertical-align: top;min-width: 8px;"><p><span style="font-size: 14px;">iPhone 6 (A8)</span></p></td><td colspan="1" rowspan="1" style="border-color: rgb(193, 199, 208);padding-top: 7px;padding-bottom: 7px;vertical-align: top;min-width: 8px;"><p><span style="font-size: 14px;">20-22ms</span></p></td><td colspan="1" rowspan="1" style="border-color: rgb(193, 199, 208);padding-top: 7px;padding-bottom: 7px;vertical-align: top;min-width: 8px;"><p><span style="font-size: 14px;">&lt;16ms</span></p></td><td colspan="1" style="border-color: rgb(193, 199, 208);padding-top: 7px;padding-bottom: 7px;vertical-align: top;min-width: 8px;"><span style="font-size: 14px;">20-33%</span></td></tr><tr><td colspan="1" rowspan="1" style="border-color: rgb(193, 199, 208);padding-top: 7px;padding-bottom: 7px;vertical-align: top;min-width: 8px;"><p><span style="font-size: 14px;">Redmi 6 Pro (骁龙625)</span></p></td><td colspan="1" rowspan="1" style="border-color: rgb(193, 199, 208);padding-top: 7px;padding-bottom: 7px;vertical-align: top;min-width: 8px;"><p><span style="font-size: 14px;">52ms</span></p></td><td colspan="1" rowspan="1" style="border-color: rgb(193, 199, 208);padding-top: 7px;padding-bottom: 7px;vertical-align: top;min-width: 8px;"><p><span style="font-size: 14px;">32ms</span></p></td><td colspan="1" style="border-color: rgb(193, 199, 208);padding-top: 7px;padding-bottom: 7px;vertical-align: top;min-width: 8px;"><span style="font-size: 14px;">62%</span></td></tr><tr><td colspan="1" rowspan="1" style="border-color: rgb(193, 199, 208);padding-top: 7px;padding-bottom: 7px;vertical-align: top;min-width: 8px;"><p><span style="font-size: 14px;">华为 P20 (麒麟970)</span></p></td><td colspan="1" rowspan="1" style="border-color: rgb(193, 199, 208);padding-top: 7px;padding-bottom: 7px;vertical-align: top;min-width: 8px;"><p><span style="font-size: 14px;">10ms</span></p></td><td colspan="1" rowspan="1" style="border-color: rgb(193, 199, 208);padding-top: 7px;padding-bottom: 7px;vertical-align: top;min-width: 8px;"><p><span style="font-size: 14px;">7-8ms</span></p></td><td colspan="1" style="border-color: rgb(193, 199, 208);padding-top: 7px;padding-bottom: 7px;vertical-align: top;min-width: 8px;word-break: break-all;"><span style="font-size: 14px;">25-42%</span></td></tr></tbody></table></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;">较好的机器在该场景下通常能跑上百帧，两者差距相对较小，这里就不一一列举。</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;"><strong>皮肤优化</strong></p><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;">为了营造皮肤的通透感，我们调研了市面上主流的皮肤渲染方案，例如屏幕空间次表面散射（Screen Space Subsurface Scattering Skin Rendering）、可分离次表面散射（Separable Subsurface Scattering）、预积分次表面散射（Pre-Integrated Skin Shading）</p><p style="word-break: break-all;white-space: normal;">以上方案除了预积分次表面散射，其它两种方案都要使用实时卷积模糊，开销非常高。而预积分次表面散射方案，根据SIGGRAPH 2011 Pre-integrated Skin Shading的分享，在完成LUT贴图和曲率贴图烘培的情况下，仅使用两次贴图采样即可模拟较好的次表面散射效果。</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014738" data-ratio="0.5554123711340206" data-s="300,640" data-type="png" data-w="776" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnkOMmViawtehiaVsauUJTibwCI0RDdztKicfibzLq2BvNsvI1m6QbZQcibFfw/640?wx_fmt=png&amp;from=appmsg"></p></div><div style="text-align: center;" powered-by="xiumi.us"><p><sup>LUT贴图烘培</sup></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014735" data-ratio="0.5570117955439057" data-s="300,640" data-type="png" data-w="763" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqn3YuBOdE2icYGiby1gwSXXwNPxSPKLl9Licnj1x8EyaBb7h1exsNQExAvw/640?wx_fmt=png&amp;from=appmsg"></p></div><div style="text-align: center;" powered-by="xiumi.us"><p><sup>曲率贴图烘培</sup></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;">考虑到移动端性能和效果平衡取舍，所以采用了预积分次表面散射的方案：</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014739" data-ratio="0.36983471074380164" data-s="300,640" data-type="png" data-w="484" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnhWLzN5RMTR53lJwIyJwnafWkxB79aC9ic2QCNcAASOkC5BmI2nMrWpA/640?wx_fmt=png&amp;from=appmsg"></p></div><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014736" data-ratio="0.6387096774193548" data-s="300,640" data-type="png" data-w="620" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqn995jHicNuXyyBwTdUr18JicNHQpbw0licYibgHISFibfx1zxUQwe4F2nianA/640?wx_fmt=png&amp;from=appmsg"></p></div><div style="text-align: center;" powered-by="xiumi.us"><p><sup>左：未开启SSS &nbsp;&nbsp; &nbsp; &nbsp;右：开启SSS</sup></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;"><strong>瞳孔优化</strong></p><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;">眼睛渲染一大难点是模拟瞳孔的一个自然的凹陷，如果没有处理好，从角色侧面观察瞳孔会突出，角色将失去神采。</p><p style="word-break: break-all;white-space: normal;">瞳孔处理通常有两种方法，一种是将瞳孔和眼角膜分开建模，瞳孔向下凹陷，另一种做法是用视差方法模拟瞳孔凹陷。</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014737" data-ratio="1.0880829015544042" data-s="300,640" data-type="png" data-w="386" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnAJia5AChMV4PAovNIH9UF9J3uNibac9QhMXb5P7bjfibEGlkjLnvsibaoQ/640?wx_fmt=png&amp;from=appmsg"></p></div><div style="text-align: center;" powered-by="xiumi.us"><p><sup>Tda式初音ミク・アペンドVer1.10</sup></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;">考虑到美术制作流程上的复杂度，我们选用了后者，需要把眼球的前向量传递给Shader，然后把视线转换到切线空间对贴图进行采样，最后应用一张Mask贴图决定整个瞳孔的凹陷程度。</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014743" data-ratio="0.5683060109289617" data-s="300,640" data-type="png" data-w="732" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnUyq3GcTPIgyvVxM0EBCXFPW0cI6lup9wgtonPyOcnbuwQUg2VNIagA/640?wx_fmt=png&amp;from=appmsg"></p></div><div style="text-align: center;" powered-by="xiumi.us"><p><sup>左：未开启瞳孔优化&nbsp; &nbsp; &nbsp; &nbsp; 右：开启瞳孔优化</sup></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><div style="display: inline-block;vertical-align: top;padding-left: 10px;"><div style="border-bottom: 1px dashed rgb(0, 0, 0);padding-left: 5px;font-size: 20px;color: rgb(12, 182, 242);"><p><strong>渲染管线设计</strong></p></div><div style="margin-top: -7px;margin-left: -10px;width: 10px;"><p style="transform: rotate(0deg);margin-left: auto;width: 7px;height: 7px;background-color: rgb(255, 102, 149);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></p><p style="margin-top: -4px;margin-left: -3px;width: 10px;height: 10px;background-color: rgb(12, 182, 242);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></p></div></div></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;">我们遇到一些移动设备高分屏的问题，在IPhone13Pro上，内部分辨率高达1170×1992，根据我们的经验，这会造成手机发热与性能问题。</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014741" data-ratio="0.909556313993174" data-s="300,640" data-type="png" data-w="586" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnl6WJZicw2T5hMD2gI2UicWqaFb4O4AHno7xDhqpM81WK2LXpvpCL504Q/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;">为了解决上述问题我们设计了一套离屏渲染管线，使用Threejs的EffectComposer申请了与屏幕分辨率不同的RenderTarget，并且在RenderScale=0.5的情况下，在大部分高分屏手机上取得了还不错的效果，兼顾了效果与性能。</p><p style="word-break: break-all;white-space: normal;">具体管线如下：</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014740" data-ratio="0.38796296296296295" data-s="300,640" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqntImnia2rTOfzyGibqNLEvPkTIE1SDRLQ70SZA1xvBjpMH4OQjkNuxbAA/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;">与Three.JS默认直接画到画布上的管线做对比，我们的方案实现的功能更复杂，由于可以控制离屏渲染分辨率，性能与质量之间可配置的灵活度也更高。</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><div style="display: inline-block;vertical-align: top;padding-left: 10px;"><div style="border-bottom: 1px dashed rgb(0, 0, 0);padding-left: 5px;font-size: 20px;color: rgb(12, 182, 242);"><p><strong>抗锯齿</strong></p></div><div style="margin-top: -7px;margin-left: -10px;width: 10px;"><p style="transform: rotate(0deg);margin-left: auto;width: 7px;height: 7px;background-color: rgb(255, 102, 149);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></p><p style="margin-top: -4px;margin-left: -3px;width: 10px;height: 10px;background-color: rgb(12, 182, 242);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></p></div></div></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;">Three.JS支持硬件抗锯齿MSAA和屏幕空间抗锯齿SMAA，在最开始我们觉得这两种抗锯齿是够用的，但随着美术需求逐渐复杂，我们发现上述两种抗锯齿对于一些边缘光照产生的高频像素无能为力，并且在实现头发等效果时，发现MSAA仅对几何走样（Geometry Aliasing）有较好的效果，但对着色走样（Shading Aliasing）基本无效。</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014744" data-ratio="0.5555555555555556" data-s="300,640" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnocf963l3QtEiaDeial689qeCQsaJQQaOuF3gmgUPXGMChiaE2Ef6eHnbg/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;">MSAA着色走样</p><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;">我们尝试使用SMAA解决，但最终结果仍不理想。根据经验，着色走样需使用超采样（Super-Sampling）抗锯齿解决，但这样无疑又增加了渲染像素，导致性能问题。</p><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;">有没有即不需要超采样，又可以解决着色走样的抗锯齿技术呢？答案是有的，我们采用时域抗锯齿（Temporal Anti-Aliasing），接下来简称为TAA。</p><p style="word-break: break-all;white-space: normal;">在实践中发现，Three.JS上并没有直接可用的TAA，官方内置的TAA本质是个超采样，这并不符合我们的预期。根据上述背景，我们决定从零开发TAA。</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;"><strong>摄影机抖动</strong></p><p style="word-break: break-all;white-space: normal;">TAA的核心思想是将多次采样的过程分布到每一帧当中，这里我们除了空间上均匀分布，还希望能在时间上均匀分布。这里根据SIGGRAPH2014 Unreal Engine 4 TAA的分享，我们使用低差异序列Halton(2, 3)作为子像素抖动偏移：</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014742" data-ratio="0.4396825396825397" data-s="300,640" data-type="png" data-w="630" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqn2yUcK2FylotibNaCYkZF4JtLzsykJl7La114XoR3sHV1Nk4gWxgibYcQ/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;">然后我们将这个抖动（Jitter）偏移调整到摄影机的投影矩阵上：</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014746" data-ratio="0.08686440677966102" data-s="300,640" data-type="png" data-w="472" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnzYd6jfuaH6zyiaT9GyZttsSGXMuCRmibon9jQmOX8ricLMa5a8O5weXPA/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;"><strong>运动向量</strong></p><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;">尽管我们将采样分布到了每一帧上，但是保存多帧对于移动平台来说是不实际的，这时我们需要简化为只保存两帧，当前帧和历史帧。我们通过指数混合的方式将当前帧和历史帧进行不断累积。如果我们只是简单的将当前帧和历史帧混合，一旦摄影机或物体发生运动就会出现残影问题，我们还需要知道当前像素在上一帧所处的位置，这个过程称为重投影（Reprojection），我们使用运动向量（Motion Vector）重建上一帧当前像素的位置。</p><p style="word-break: break-all;white-space: normal;">渲染运动向量：</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014745" data-ratio="0.12375249500998003" data-s="300,640" data-type="png" data-w="501" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnSjDVYzpNdIcOY5uBYIxj9CZLjFDBb0jzgdetJchNuVhgm8nskz5sUQ/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;">这里需要注意的是，计算上一帧裁剪空间（Clip Space）位置时我们除了要传递上一帧的MVP矩阵给Shader外，我们还需要将上一帧的蒙皮骨骼矩阵一并上传（Three.JS使用的是GPU蒙皮）。为了节省性能，运动向量的RT我们使用了RGBA8格式，在输出时，还需要将两个Float打包进RGBA8中，在使用运动向量时，我们还需要进行相应的Unpack操作。</p><p style="word-break: break-all;white-space: normal;">当然，在移动端渲染运动向量需要将场景中物体再次渲染一遍，这样开销在低端机上依然无法接受，所以在低端机上我们使用深度图进行位置重建：</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014747" data-ratio="0.2608695652173913" data-s="300,640" data-type="png" data-w="529" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnFMJZ4xIWybuoksjjhiaDSIMq2cKB5icr6VvL5LuFPsKgcnliafiaib9O6Iw/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;">具体思路是用逆VP矩阵将位置转换到世界空间，然后再算出上一帧的位置。当然这个方法的缺点是无法重建蒙皮动画的运动。</p><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;"><br></p><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;"><strong>计算颜色包围盒</strong></p><p style="word-break: break-all;white-space: normal;">尽管进行了上述操作后，残影问题解决了一大部分，但是我们发现在平移物体的时候，依然会在背景上出现大量的鬼影（Ghosting）。</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014749" data-ratio="0.838006230529595" data-s="300,640" data-type="png" data-w="642" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnia5CcleQW2blyOvU4v0egTwNmKHjnvtx0cTIia94FgJ6scXucNtJMORA/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;">这是由于当前像素在上一帧并没有出现（被遮挡），在速度向量上也不会有记录。这里我们的解决办法是计算当前帧像素周围8个采样点的颜色，计算出最大最小颜色，形成一个颜色包围盒。我们还可以在YCoCg空间中获得更加精确的结果。然后我们就可以将历史帧的颜色限制在这个颜色包围盒范围之内。</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;"><strong>方差裁剪</strong></p><p style="word-break: break-all;white-space: normal;">在高端设备或PC平台上，我们还参考了Nvidia GDC 2016上提出的方差裁剪（Variance Clipping）</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014748" data-ratio="0.632295719844358" data-s="300,640" data-type="png" data-w="514" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnq6PTwmVQSYgpOmX4rBtx64hqsn02I47mZ9exc6fj1Hgxy0TYsFYKUA/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;">这里我们的gamma值取2将会获得一个比较稳定的结果。</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014750" data-ratio="0.38482384823848237" data-s="300,640" data-type="png" data-w="369" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqngWy21MDNHQmmp1uMXv2fuJ4Mib77w6K2beM0aoJeicLufY886p4TJfXg/640?wx_fmt=png&amp;from=appmsg"></p></div><div style="text-align: center;" powered-by="xiumi.us"><p><sup>左：gamma 1.0&nbsp; &nbsp; &nbsp; &nbsp; 右：gamma 2.0</sup></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;"><strong>深度扩张</strong></p><p style="word-break: break-all;white-space: normal;">到目前为止，我们已经得到了比较好的效果，但我们移动摄影机会发现，物体边缘会有锯齿。</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014752" data-ratio="0.8505434782608695" data-s="300,640" data-type="png" data-w="368" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnpQzNTgxOp21ayGMVTtKwd6LCLh8LeiaReMaQcyFN00MWtY1BlPcrWwQ/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;">这里我们需要对当前像素的深度周围8个像素进行采样，得到一个最小值（离摄影机最近），然后得到该采样点的纹理坐标偏移。然后对速度向量采样时，应用这个偏移。这样相当于对速度向量离摄影机最近的部分进行扩张，这样就解决了物体边缘锯齿的问题。</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;"><strong>抗闪烁</strong></p><p style="word-break: break-all;white-space: normal;">最后一个问题，也是最难解决的问题，就是TAA抖动的时候，造成一些像素当前帧被光栅化了，但到了下一帧又消失了，这就导致之前计算颜色包围盒时，历史帧的颜色与当前帧色彩差距过大，被裁剪掉了，这时就会出现非常明显的闪烁问题。</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img data-imgfileid="100014754" data-ratio="1" data-s="300,640" data-type="gif" data-w="128" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_gif/1BMf5Ir754QsoomDywL7COia5PI9QdJqnKsdJd04vyxpygcOquRSoOCxOxrFCuJ013aibMOee9NkxMOZXlQ0acLg/640?wx_fmt=gif&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;">这里我们的解决办法是再多申请一张RT，记录上一帧的颜色，然后根据速度向量的差值混合当前帧和上一帧颜色。这个方法初衷是使用两帧颜色，尽可能还原更多高频信息。</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014753" data-ratio="0.5" data-s="300,640" data-type="png" data-w="744" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnPOoZLLiaSpoE2nkd1QEB9r3H9UrGItdbaMceJQsyBvl4dXwuzwBnB2g/640?wx_fmt=png&amp;from=appmsg"></p></div><div style="text-align: center;" powered-by="xiumi.us"><p><sup>左：单帧&nbsp; &nbsp; &nbsp; &nbsp; 右：2帧混合</sup></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014751" data-ratio="0.7857142857142857" data-s="300,640" data-type="png" data-w="420" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnw7ezhBrChFSvvq64G1vnOvESBBgXZ6ibDwicaiay460qQz9MD83J0G0EQ/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;">我们可以观察到头发丝的结果也更加稳定，改善了发丝断断续续的情况。虽然目前画面仍有一些闪烁问题，但已经可以被接受。</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014757" data-ratio="0.33376792698826596" data-s="300,640" data-type="png" data-w="767" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnLNe7VIwP9ybqgqnatk5sWh4WHwR99iatau7X9X5fFwZhJFHhzvrftwg/640?wx_fmt=png&amp;from=appmsg"></p></div><div style="text-align: center;" powered-by="xiumi.us"><p><sup>左：TAA &nbsp;&nbsp; &nbsp; &nbsp; 中：MSAA &nbsp;&nbsp; &nbsp; &nbsp; 右：SMAA</sup></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><div style="display: inline-block;vertical-align: top;padding-left: 10px;"><div style="border-bottom: 1px dashed rgb(0, 0, 0);padding-left: 5px;font-size: 20px;color: rgb(12, 182, 242);"><p><strong>抖动半透明</strong></p></div><div style="margin-top: -7px;margin-left: -10px;width: 10px;"><p style="transform: rotate(0deg);margin-left: auto;width: 7px;height: 7px;background-color: rgb(255, 102, 149);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></p><p style="margin-top: -4px;margin-left: -3px;width: 10px;height: 10px;background-color: rgb(12, 182, 242);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></p></div></div></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;">半透明渲染一直是光栅化渲染中的难题，纯半透明渲染又和渲染顺序息息相关，要解决顺序问题，我们可以在美术资产制作的时候严格按照顺序进行分组与拆分，但这样无疑对美术制作负担过重。如果我们使用类似深度剥离、权重混合等OIT技术，作为移动平台开销又太高了。至于像链表OIT WebGL不支持，我们即希望开销足够低，又可以无视排序问题，还可以获得不错的半透明效果，那有没有这样的解决方案呢？答案是有的：抖动半透明（Dithering Transparency）。值得一提的是，目前市面大多数3A游戏也在使用这个技术。</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014758" data-ratio="1.0790273556231003" data-s="300,640" data-type="png" data-w="329" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnzibUFFRhWqaAeGfZFDaBVgMpumnSuPPqj5FTbh2Eegpb1uBZCsqwenw/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;">但请注意，这个技术需要配合TAA一起使用，如果单纯使用抖动技术并不能获得很好的效果。</p><p style="word-break: break-all;white-space: normal;">此外关于抖动的pattern，规则抖动可以获得较平滑的结果，但是由于其原理没法保留背后的半透明信息，相当于覆盖掉了。我们的解决办法是在规则抖动中加入一些随机抖动：</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014759" data-ratio="0.38796296296296295" data-s="300,640" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnbJzNbtu3RibwvCKY0yicGXOzFyhGkUQp9KMN6G7wGR05zWaocQDOEI1w/640?wx_fmt=png&amp;from=appmsg"></p></div><div style="text-align: center;" powered-by="xiumi.us"><p><sup>左：半透明裁剪&nbsp; &nbsp; &nbsp; &nbsp; 中：规则抖动&nbsp; &nbsp; &nbsp; &nbsp; 右：规则抖动+随机抖动</sup></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><div style="display: inline-block;vertical-align: top;padding-left: 10px;"><div style="border-bottom: 1px dashed rgb(0, 0, 0);padding-left: 5px;font-size: 20px;color: rgb(12, 182, 242);"><p><strong>软阴影</strong></p></div><div style="margin-top: -7px;margin-left: -10px;width: 10px;"><p style="transform: rotate(0deg);margin-left: auto;width: 7px;height: 7px;background-color: rgb(255, 102, 149);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></p><p style="margin-top: -4px;margin-left: -3px;width: 10px;height: 10px;background-color: rgb(12, 182, 242);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></p></div></div></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;">一个好的阴影效果，将会大大提升画面的真实度，Three.JS内置4种阴影类型：</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014755" data-ratio="0.23394495412844038" data-s="300,640" data-type="png" data-w="654" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnmSqK9cf52FA3a6vSqyNLjyO9qEGjViaVgOAd7jTzticgoBLISUjygONg/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><ol class="list-paddingleft-1" style="padding-left: 40px;list-style-position: outside;"><li><p style="word-break: break-all;margin-bottom: 15px;">未过滤，锯齿感严重，无法使用</p></li><li><p style="word-break: break-all;margin-bottom: 15px;">PCF相比上面多了几次采样，但依然有锯齿感</p></li><li><p style="word-break: break-all;margin-bottom: 15px;">VSM对于平面投影效果非常不错，但是对于复杂曲面物体，瑕疵较多</p></li><li><p style="word-break: break-all;margin-bottom: 15px;">PCF Soft虽然消除了锯齿感，但是半影范围无法调整</p></li></ol><p style="word-break: break-all;white-space: normal;">综上所述Three.JS内置的阴影均不符合预期效果，我们的诉求是不要有明显锯齿感，且可以有较大的半影范围。</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;"><strong>泊松分布</strong></p><p style="word-break: break-all;white-space: normal;">我们使用泊松盘（Poisson Disc）对阴影贴图进行采样，并且每次会随机旋转一个角度，来消除规则pattern。最后我们配合TAA消除噪点：</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014756" data-ratio="0.51" data-s="300,640" data-type="png" data-w="300" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnd11c82nl1dzdp6f3JdZlczMk4q7ibFPpKD0FwIIYTsWQccxXjcQtGhw/640?wx_fmt=png&amp;from=appmsg"></p></div><div style="text-align: center;" powered-by="xiumi.us"><p><sup>左：旋转泊松盘&nbsp; &nbsp; &nbsp; &nbsp; 右：泊松盘+TAA</sup></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><div style="display: inline-block;vertical-align: top;padding-left: 10px;"><div style="border-bottom: 1px dashed rgb(0, 0, 0);padding-left: 5px;font-size: 20px;color: rgb(12, 182, 242);"><p><strong>泛光</strong></p></div><div style="margin-top: -7px;margin-left: -10px;width: 10px;"><p style="transform: rotate(0deg);margin-left: auto;width: 7px;height: 7px;background-color: rgb(255, 102, 149);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></p><p style="margin-top: -4px;margin-left: -3px;width: 10px;height: 10px;background-color: rgb(12, 182, 242);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></p></div></div></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;">一般来说我们的显示设备通常不支持HDR（高动态范围），于是我们需要模拟光线在薄膜中的次表面散射（胶片、镜头滤光片、视网膜等）。在PBR管线下，镜面反射的动态范围通常非常高，此技术可以帮助物体表现相对亮度，或给LDR图像添加真实感。</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014762" data-ratio="0.34942084942084944" data-s="300,640" data-type="png" data-w="518" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqn1icCuoibD5I7GWxVsTsHzRyDYg883N4rbLkD3fWngbglcfo5PBPEnKRQ/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;">Three.JS中包含多个内置的Bloom、Glow效果，但效果往往是一种简单的模糊，不符合我们对高动态范围亮度泛光效果的预期。</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;"><strong>基于物理的泛光</strong></p><p style="word-break: break-all;white-space: normal;">（Physically Based Bloom）流程如下：</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014764" data-ratio="1.0805555555555555" data-s="300,640" data-type="png" data-w="1080" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnuFOxUKQJHLabeuhwXvmjxoTIe6LZvOtujplk9Bib29cLsLKdlHQuPOA/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;">首先对原画面图做一个阈值处理，过滤出亮度超过阈值的颜色，然后对这个颜色进行降采样并进行模糊，每次下采样的纹理尺寸将是之前的一半，一般我们迭代7-8次，由于迭代次数越多，最终Bloom能溢出的范围将越大。达到最低的mip等级后，我们就可以进行上采用，这里需要注意，所有mip等级都需要持久保存，将当前等级和前一级模糊的图像进行混合，混合因子也决定了溢出范围。</p><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;"><br></p><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;"><strong>泛光透明穿透</strong></p><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;">完成上采样以后，最后一步是和原图颜色混合，一般来说在Linear色彩空间下使用加法即可。</p><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;">由于我们的项目还需要透明背景，仅仅对Alpha通道进行模糊处理依然会有光晕黑边问题。</p><p style="word-break: break-all;white-space: normal;">这里我们将最终Bloom颜色转换到HSV色彩空间，将V值保存为Alpha，然后将V值设为1。</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;"><img class="rich_pages wxw-img" data-imgfileid="100014763" data-ratio="1.0382022471910113" data-s="300,640" data-type="png" data-w="445" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QsoomDywL7COia5PI9QdJqnpXXb7CL9TeDfedmFXFN27mnjAss0PvCLk8tAIBUFemichBj2fU6ArDA/640?wx_fmt=png&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><div style="display: inline-block;vertical-align: top;padding-left: 10px;"><div style="border-bottom: 1px dashed rgb(0, 0, 0);padding-left: 5px;font-size: 20px;color: rgb(12, 182, 242);"><p><strong>总结</strong></p></div><div style="margin-top: -7px;margin-left: -10px;width: 10px;"><p style="transform: rotate(0deg);margin-left: auto;width: 7px;height: 7px;background-color: rgb(255, 102, 149);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></p><p style="margin-top: -4px;margin-left: -3px;width: 10px;height: 10px;background-color: rgb(12, 182, 242);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></p></div></div></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;">通过上述的技术方案重构和优化，我们在Web上实现了符合预期的3D数字人渲染效果。横向对比头部的移动端数字人竞品，在CG和仿真风格领域，我们具备较大的竞争优势，特别是在人物关键特征的还原和光影效果的复现上。在未来的迭代中，我们将继续在捏脸换装，人物面部/身体动画，互动特效方向上继续深耕效果优化，打造更具行业竞争力的数字人个性化动态渲染解决方案。</p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="margin-top: 10px;margin-bottom: 10px;text-align: center;" powered-by="xiumi.us"><div style="display: inline-block;vertical-align: top;padding-left: 10px;"><div style="border-bottom: 1px dashed rgb(0, 0, 0);padding-left: 5px;font-size: 20px;color: rgb(12, 182, 242);"><p><strong>参考文献</strong></p></div><div style="margin-top: -7px;margin-left: -10px;width: 10px;"><p style="transform: rotate(0deg);margin-left: auto;width: 7px;height: 7px;background-color: rgb(255, 102, 149);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></p><p style="margin-top: -4px;margin-left: -3px;width: 10px;height: 10px;background-color: rgb(12, 182, 242);"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></p></div></div></div><div style="padding-right: 8px;padding-left: 8px;" powered-by="xiumi.us"><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;">Zioma, R. (2015). Optimizing PBR [PowerPoint slides].&nbsp;<span style="text-decoration: underline;color: rgb(12, 182, 242);"><em>https://community.arm.com/cfs-file/__key/communityserver-blogs-components-weblogfiles/00-00-00-20-66/siggraph2015_2D00_mmg_2D00_renaldas_2D00_slides.pdf</em></span></p><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;">Jimenez, J., &amp; von der Pahlen, J. (2013). Next Generation Character Rendering [PowerPoint slides].&nbsp;<span style="text-decoration: underline;color: rgb(12, 182, 242);"><em>http://www.iryoku.com/stare-into-the-future</em></span></p><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;">Penner, E. (2011). Pre-Integrated Skin Shading [PowerPoint slides].&nbsp;<span style="text-decoration: underline;color: rgb(12, 182, 242);"><em>http://advances.realtimerendering.com/s2011/Penner%20-%20Pre-Integrated%20Skin%20Rendering%20(Siggraph%202011%20Advances%20in%20Real-Time%20Rendering%20Course).pptx</em></span></p><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;">Karis, B. (2014). High Quality Temporal Supersampling [PowerPoint slides].&nbsp;<span style="text-decoration: underline;color: rgb(12, 182, 242);"><em>https://de45xmedrsdbp.cloudfront.net/Resources/files/TemporalAA_small-59732822.pdf</em></span></p><p style="word-break: break-all;margin-bottom: 15px;white-space: normal;">OpenGL Tutorial. Tutorial 16 : Shadow mapping.&nbsp;<span style="text-decoration: underline;color: rgb(12, 182, 242);"><em>http://www.opengl-tutorial.org/intermediate-tutorials/tutorial-16-shadow-mapping/#stratified-poisson-sampling</em></span></p><p style="word-break: break-all;white-space: normal;">Christensen, A. P. (2022). Physically Based Bloom.&nbsp;<span style="text-decoration: underline;color: rgb(12, 182, 242);"><em>https://learnopengl.com/Guest-Articles/2022/Phys.-Based-Bloom</em></span></p><p style="word-break: break-all;white-space: normal;"><span style="text-decoration: underline;color: rgb(12, 182, 242);"><em><br></em></span></p></div><div style="text-align: center;justify-content: center;display: flex;flex-flow: row nowrap;margin-top: 5px;margin-bottom: 10px;" powered-by="xiumi.us"><p style="display: inline-block;vertical-align: top;width: auto;min-width: 5%;flex: 0 0 auto;height: auto;padding-right: 5px;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></p><div style="display: inline-block;vertical-align: top;width: auto;align-self: flex-start;flex: 0 0 auto;border-style: solid;border-width: 0px 0px 1px;border-color: rgb(30, 88, 134);min-width: 5%;height: auto;padding: 5px;"><div style="text-align: justify;color: rgb(12, 182, 242);" powered-by="xiumi.us"><p style="white-space: normal;"><strong>开发者问答</strong></p></div></div></div><div style="padding-right: 8px;padding-left: 8px;font-size: 13px;" powered-by="xiumi.us"><p style="word-break: break-all;white-space: normal;"><span style="color: rgb(255, 102, 149);"><strong>你知道在风格化渲染上还有哪些技巧吗？</strong></span>欢迎在留言区告诉我们。转发并留言，小编将选取1则最有价值的评论，送出<span style="text-decoration: underline;"><strong>哔哩哔哩双层六芒星玻璃杯1个</strong></span>（见下图）。<span style="color: rgb(255, 102, 149);"><strong>2月27日中午12点开奖。如果喜欢本期内容的话，欢迎点个“在看”吧！</strong></span></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;margin-top: 10px;margin-bottom: 10px;line-height: 0;" powered-by="xiumi.us"><p style="vertical-align: middle;display: inline-block;line-height: 0;width: 45%;height: auto;"><img class="rich_pages wxw-img" data-imgfileid="100014760" data-ratio="1" data-s="300,640" data-type="jpeg" data-w="800" style="vertical-align: middle;width: 100%;" src="https://mmbiz.qpic.cn/mmbiz_jpg/1BMf5Ir754QsoomDywL7COia5PI9QdJqnsicE9p87BuaS7wW8asw0rOZMT9xb8JfcPQKD12DcJwl983mDhefyQFA/640?wx_fmt=jpeg&amp;from=appmsg"></p></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;justify-content: center;display: flex;flex-flow: row nowrap;margin-top: 5px;margin-bottom: 10px;" powered-by="xiumi.us"><p style="display: inline-block;vertical-align: top;width: auto;min-width: 5%;flex: 0 0 auto;height: auto;padding-right: 5px;"><svg viewBox="0 0 1 1" style="float:left;line-height:0;width:0;vertical-align:top;"></svg></p><div style="display: inline-block;vertical-align: top;width: auto;align-self: flex-start;flex: 0 0 auto;border-style: solid;border-width: 0px 0px 1px;border-color: rgb(30, 88, 134);min-width: 5%;height: auto;padding: 5px;"><div style="text-align: justify;color: rgb(12, 182, 242);" powered-by="xiumi.us"><p style="white-space: normal;"><strong>往期精彩指路</strong></p></div></div></div><div style="text-align: left;justify-content: flex-start;display: flex;flex-flow: row nowrap;margin-top: 5px;margin-bottom: 10px;" powered-by="xiumi.us"><div style="display: inline-block;width: 100%;vertical-align: top;align-self: flex-start;flex: 0 0 auto;background-color: rgba(234, 244, 255, 0.34);padding: 25px;height: auto;"><div style="transform: translate3d(-5px, 0px, 0px);" powered-by="xiumi.us"><div style="text-align: justify;padding-right: 8px;padding-left: 8px;font-size: 13px;"><ul class="list-paddingleft-1" style="padding-left: 40px;list-style-position: outside;"><li><p style="margin-bottom: 15px;"><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=Mzg3Njc0NTgwMg==&amp;mid=2247495537&amp;idx=1&amp;sn=0315691622577924f9f4e28929cad16a&amp;chksm=cf2f2a54f858a342520cb94e03f5de2ca07c14cc17c8809f8a4912bf6f9aca9f680b25328ee3&amp;scene=21#wechat_redirect" textvalue="B站幻星数字人3D渲染技术揭秘" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2">B站幻星数字人3D渲染技术揭秘</a></p></li><li><p style="margin-bottom: 15px;"><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=Mzg3Njc0NTgwMg==&amp;mid=2247495403&amp;idx=1&amp;sn=6a0197dadd8f8a4a6d4efcd85018287c&amp;chksm=cf2f2bcef858a2d8d8266faba7fc458f996442f2f2525270015ed81369a7be242dd891b94195&amp;scene=21#wechat_redirect" textvalue="B站虚拟人与动作捕捉技术" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2">B站虚拟人与动作捕捉技术</a></p></li><li><p><a target="_blank" href="http://mp.weixin.qq.com/s?__biz=Mzg3Njc0NTgwMg==&amp;mid=2247494394&amp;idx=1&amp;sn=e82b908c3e3f4c954b611bbd7c32e334&amp;chksm=cf2f2fdff858a6c995323554c8151575ee767bea54d54818bab969fd366a438ee4a16be5c459&amp;scene=21#wechat_redirect" textvalue="浏览器渲染原理与弹幕" linktype="text" imgurl="" imgdata="null" data-itemshowtype="0" tab="innerlink" data-linktype="2">浏览器渲染原理与弹幕</a></p></li></ul></div></div></div></div><p style="white-space: normal;" powered-by="xiumi.us"><br></p><div style="text-align: center;font-size: 13px;letter-spacing: 4px;" powered-by="xiumi.us"><p><a target="_blank" href="https://mp.weixin.qq.com/mp/appmsgalbum?__biz=Mzg3Njc0NTgwMg==&amp;action=getalbum&amp;album_id=3289447926347317252#wechat_redirect" textvalue="通用工程" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2"><span style="color: rgb(12, 182, 242);">通用工程</span></a>丨<a target="_blank" href="https://mp.weixin.qq.com/mp/appmsgalbum?__biz=Mzg3Njc0NTgwMg==&amp;action=getalbum&amp;album_id=2390333109742534656#wechat_redirect" textvalue="大前端" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2"><span style="color: rgb(12, 182, 242);">大前端</span></a>丨<a target="_blank" href="https://mp.weixin.qq.com/mp/appmsgalbum?__biz=Mzg3Njc0NTgwMg==&amp;action=getalbum&amp;album_id=3297757408550699008#wechat_redirect" textvalue="业务线" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2"><span style="color: rgb(12, 182, 242);">业务线</span></a><br></p><p><a target="_blank" href="https://mp.weixin.qq.com/mp/appmsgalbum?__biz=Mzg3Njc0NTgwMg==&amp;action=getalbum&amp;album_id=2329861166598127619#wechat_redirect" textvalue="大数据" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2"><span style="color: rgb(12, 182, 242);">大数据</span></a>丨<a target="_blank" href="https://mp.weixin.qq.com/mp/appmsgalbum?__biz=Mzg3Njc0NTgwMg==&amp;action=getalbum&amp;album_id=2782124818895699969#wechat_redirect" textvalue="AI" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2"><span style="color: rgb(12, 182, 242);">AI</span></a>丨<a target="_blank" href="https://mp.weixin.qq.com/mp/appmsgalbum?__biz=Mzg3Njc0NTgwMg==&amp;action=getalbum&amp;album_id=2532608330440081409#wechat_redirect" textvalue="多媒体" linktype="text" imgurl="" imgdata="null" tab="innerlink" data-linktype="2"><span style="color: rgb(12, 182, 242);">多媒体</span></a></p><p><br></p></div><p class="mp_profile_iframe_wrp"><mp-common-profile class="js_uneditable custom_select_card mp_profile_iframe" data-pluginname="mpprofile" data-id="MzUxNTE4OTc0Mg==" data-headimg="http://mmbiz.qpic.cn/mmbiz_png/EVKwaZXNTl9OCCo7pxLHz2e2I3kV3rTPao5LlIickfJS79DNd2yjqjfYEtwtMOyVuKhJoDIq6UU4U9TQbjvOLaQ/0?wx_fmt=png" data-nickname="哔哩哔哩招聘" data-alias="" data-signature="生产快乐的地方" data-from="0" data-is_biz_ban="0"></mp-common-profile></p><p class="mp_profile_iframe_wrp"><mp-common-profile class="js_uneditable custom_select_card mp_profile_iframe" data-pluginname="mpprofile" data-id="Mzg3Njc0NTgwMg==" data-headimg="http://mmbiz.qpic.cn/mmbiz_png/1BMf5Ir754QyhiatboUJGZpnzrVDJZCDFYOWhcbdbvj2TlhSXVeErhqCZ8CzgHob1wNDy9IUl4HJheIaIrzgN3A/0?wx_fmt=png" data-nickname="哔哩哔哩技术" data-alias="bilibili-TC" data-signature="提供B站相关技术的介绍和讲解" data-from="0" data-is_biz_ban="0"></mp-common-profile></p></div><p style="display: none;"><mp-style-type data-value="3"></mp-style-type></p>]]></summary>
        <author>
            <name>万成</name>
        </author>
    </entry>
</feed>